// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission06_meldrumn.Models;

namespace Mission06_meldrumn.Migrations
{
    [DbContext(typeof(MovieAppContext))]
    [Migration("20230222003143_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission06_meldrumn.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<string>("Edited")
                        .HasColumnType("TEXT");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<short>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            MovieID = 1,
                            CategoryID = 1,
                            Director = "Joss Whedon",
                            Edited = "No",
                            LentTo = "",
                            Notes = "A Certified Classic",
                            Rating = "PG-13",
                            Title = "The Avengers",
                            Year = (short)2012
                        },
                        new
                        {
                            MovieID = 2,
                            CategoryID = 1,
                            Director = "Christopher Nolan",
                            Edited = "",
                            LentTo = "",
                            Notes = "Top Tier",
                            Rating = "PG-13",
                            Title = "Tenet",
                            Year = (short)2020
                        },
                        new
                        {
                            MovieID = 3,
                            CategoryID = 1,
                            Director = "Peter Ramsey, Bob Persichetti, Rodney Rothman",
                            Edited = "No",
                            LentTo = "",
                            Notes = "Best Movie of All Time",
                            Rating = "PG",
                            Title = "Spider-Man: Into the Spider-Verse",
                            Year = (short)2018
                        });
                });

            modelBuilder.Entity("Mission06_meldrumn.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Action/Adventure"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Family"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Horror/Suspense"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Miscellaneous"
                        });
                });

            modelBuilder.Entity("Mission06_meldrumn.Models.ApplicationResponse", b =>
                {
                    b.HasOne("Mission06_meldrumn.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
